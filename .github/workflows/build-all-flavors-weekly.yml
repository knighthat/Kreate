name: Build all flavors

on:
  schedule:
    # Gotta wait until contributors.json is updated
    - cron: '0 0 * * 0'  # Every Sunday at 0AM

  # Allow manual trigger
  workflow_dispatch:

# Prevent multiple jobs from running at the same time
concurrency:
  group: 'weekly-deploy'
  cancel-in-progress: false  # Don't cancel any in-progress runs in this group

jobs:
  build_time:
    name: Capture current time
    runs-on: ubuntu-latest
    # Set date as a variable
    outputs:
      date: ${{ steps.date.outputs.date }}

    steps:
      - name: Get date
        id: date
        # Output of "October 2 2024" will be "20241002"
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

  build_version:
    name: Extract version
    runs-on: ubuntu-latest
    # Set version as a variable
    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
      - uses: actions/checkout@v4.2.1

      - name: Get version
        id: version
        # Output is current version located inside composeApp/build.gradle.kts
        # android {
        #   defaultConfig {
        #     versionName = "..."
        #   }
        # }
        run: echo "version=$(grep -E '^\s*versionName\s*=' composeApp/build.gradle.kts | awk -F '"' '{print $2}')" >> $GITHUB_OUTPUT

  build-full:
    name: Build full version
    runs-on: ubuntu-latest
    timeout-minutes: 60       # Prevent Github Action from terminating this workflow on first run

    steps:
      - uses: actions/checkout@v4.2.1

      - name: Setup Java 21
        uses: actions/setup-java@v4.7.0
        with:
          java-version: "21"
          distribution: "corretto"

      - name: Restore Gradle dependencies & build cache
        uses: actions/cache@v4.2.3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ./build
            ./composeApp/build
          # Cache key has flavor's name to prevent override each other
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}-

      - name: Build with Gradle
        run: ./gradlew assembleFull

      - name: Upload artifacts for signing
        uses: actions/upload-artifact@v4.4.1
        with:
          name: unsigned-full
          path: |
            composeApp/build/outputs/apk/full/*.apk

  build-minified:
    name: Build minified version
    runs-on: ubuntu-latest
    timeout-minutes: 60       # Prevent Github Action from terminating this workflow on first run

    steps:
      - uses: actions/checkout@v4.2.1

      - name: Setup Java 21
        uses: actions/setup-java@v4.7.0
        with:
          java-version: "21"
          distribution: "corretto"

      - name: Restore Gradle dependencies & build cache
        uses: actions/cache@v4.2.3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ./build
            ./composeApp/build
          # Cache key has flavor's name to prevent override each other
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}-

      - name: Build with Gradle
        run: ./gradlew assembleMinified

      - name: Upload artifacts for signing
        uses: actions/upload-artifact@v4.4.1
        with:
          name: unsigned-minified
          path: |
            composeApp/build/outputs/apk/minified/*.apk

  sign-apks:
    name: Sign all built APKs
    needs:
      - build-full
      - build-minified
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4.1.8
        with:
          # Destination path. Supports basic tilde expansion.
          # Optional. Default is $GITHUB_WORKSPACE
          path: upstream/unsigned
          # When multiple artifacts are matched, this changes the behavior of the destination directories.
          # If true, the downloaded artifacts will be in the same directory specified by path.
          # If false, the downloaded artifacts will be extracted into individual named directories within the specified path.
          # Optional. Default is 'false'
          merge-multiple: true

      - name: Sign upstream APKs
        uses: Tlaster/android-sign@v1.2.2
        with:
          releaseDirectory: upstream/unsigned

          signingKeyBase64: "${{ secrets.KREATE_KEYSTORE }}"
          keyStorePassword: "${{ secrets.KREATE_KEYSTORE_PASSWD }}"
          alias: "${{ secrets.KREATE_KEY_ALIAS }}"
          keyPassword: "${{ secrets.KREATE_KEY_PASSWD }}"

          output: signed
        env:
          BUILD_TOOLS_VERSION: "34.0.0"

      - name: Remove trails     # remove "-signed"
        run: |
          for filename in signed/*.apk; do mv "$filename" "${filename//-signed}"; done

      - name: Upload for release
        uses: actions/upload-artifact@v4.4.1
        with:
          name: signed-apks
          path: signed/*.apk

  upload-to-release:
    needs: [build_time, build_version, sign-apks]
    runs-on: ubuntu-latest

    steps:
      - name: Download signed APKs
        uses: actions/download-artifact@v4.1.8
        with:
          name: signed-apks

      - name: Upload built APK to release
        uses: softprops/action-gh-release@v2
        with:
          files: '*.apk'
          # Name: v0.0.1-20250303 | Weekly Build
          name: v${{ needs.build_version.outputs.version }}-${{ needs.build_time.outputs.date }} | Weekly Build
          tag_name: v${{ needs.build_version.outputs.version }}
          make-latest: "true"
          body: |
            <div align="center">
              <img alt="app-logo" src="/assets/design/latest/featuregraphic.png" />
              <p><b>Kreate</b> - by @knighthat</p>
            </div>
            
            ## ðŸ“² Installation
  
            Download and install `minified` version of the app (because the size is smaller).\
            Only install `full` version when `minified` exhibits problems during installation.\
            If you have trouble using the app, report it with the link below.
            
            > **If Android says that data will be wiped, cancel and report it [HERE](https://github.com/knighthat/Kreate/issues/new?assignees=&labels=bug&template=bug_report.yaml)**
            
            ## Verification
            
            > Always check for signature before installing any app you downloaded from Github or any other APK distributors.\
            
            ### Public key hashes
            
            | Algorithm      | Hash digest                                                      |
            |----------------|------------------------------------------------------------------|
            | SHA-256        | 9dadd5c4bbfb59174bca523dd10b66bedbbf7b2e00630fa990d140a6a17ce7a5 |
            | SHA-1          | f49a497bd47322c90e9f534ff945ac05f3a8e77a                         |
            | MD5            | d4fc781f4a5ffc10434cb84d93706eba                                 |
            
            ### Certificate hashes
            
            | Algorithm      | Hash digest                                                      |
            |----------------|------------------------------------------------------------------|
            | SHA-256        | 1bd03a8de5df4dbd7faddb81b9f2aaf55681a584a93d6fb47e9a5ccc736ef7ac |
            | SHA-1          | 1690571d0d8b8d54c43a4b9460a2a2bc5f67e9bc                         |
            | MD5            | 320e604e315a0abb177e8d7570dcf4dc                                 |
            
            ## FAQ
            
            <details> 
            <summary>Q1: How do I download your build?</summary>
              <blockquote>
                Right below this article, there are links to prebuilt APKs.<br>
                Select the one that fits your need to start the download.
              </blockquote>
            </details>
            <details>
            <summary>Q2: How verify build's signature?</summary>
              <blockquote>
                There are 2 main methods:
                <ol>
                  <li>
                    Built-in <a href="https://stackoverflow.com/questions/7104624/how-do-i-verify-that-an-android-apk-is-signed-with-a-release-certificate" target="_blank" rel="noopener noreferrer">jarsigner</a>
                  </li>
                  <li>
                    <a href="https://developer.android.com/tools/apksigner#options-verify" target="_blank" rel="noopener noreferrer">apksigner</a> from AndroidSDK
                  </li>
                </ol>
              </blockquote>
            </details>
            
            ## Changelogs
            
            Please visit [wiki/changelogs](https://github.com/knighthat/Kreate/wiki/Changelogs) for details.

          token: ${{ secrets.RELEASE_TOKEN }}
          generate_release_notes: true
